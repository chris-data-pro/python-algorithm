Scroll to begin   
Compilation vs. interpretation
New Component Title
New Component Title
About the course
New Component Title
Return
Previous
Home
Back to menu
Next
{{inc index}}
Close
Question
What do you call a file containing a program written in a high-level programming language?
A source file
A machine file
A code file
A target file
New Component Title
Question
What is the best definition of a script?
It's a text file that contains instructions which make up a Python program
It's an error message generated by the compiler
It's an error message generated by the interpreter
It's a text file that contains sequences of zeroes and ones
There is more than one Python
There are two main kinds of Python, called Python 2 and Python 3.Python 2 is an older version of the original Python. Its development has since been intentionally stalled, although that doesn't mean that there are no updates to it. On the contrary, the updates are issued on a regular basis, but they are not intended to modify the language in any significant way. They rather fix any freshly discovered bugs and security holes. Python 2's development path has reached a dead end already, but Python 2 itself is still very much alive.Python 3 is the newer (or to be more precise, the current) version of the language. It's going through its own evolutionary path, creating its own standards and habits.
Question
What is true about compilation? (Select two answers)
The code is converted directly into machine code executable by the processor
It tends to be faster than interpretation
It tends to be slower than interpretation
Both you and the end user must have the compiler to run your code
Question
Select the true statements. (Select two answers)
Python is a good choice for creating and executing tests for applications
Python is free, open-source, and multiplatform
Python is a good choice for low-level programming, e.g., when you want to implement an effective driver
Python 3 is backwards compatible with Python 2
New Component Title
Natural languages vs. programming languages
How to spoil and fix your code
New Component Title
Question
What is machine code?
A low-level programming language consisting of binary digits/bits that the computer reads and understands
A low-level programming language consisting of hexadecimal digits that make up high-level language instructions
A medium-level programming language consisting of the assembly code designed for the computer processor
A high-level programming language consisting of instruction lists that humans can read and understand
New Component Title
What is Python?
Python is a widely-used, interpreted, object-oriented, and high-level programming language with dynamic semantics, used for general-purpose programming.And while you may know the python as a large snake, the name of the Python programming language comes from an old BBC television comedy sketch series called Monty Python's Flying Circus.At the height of its success, the Monty Python team were performing their sketches to live audiences across the world, including at the Hollywood Bowl.Since Monty Python is considered one of the two fundamental nutrients to a programmer (the other being pizza), Python's creator named the language in honor of the TV show.
New Component Title
Section 1 – Introduction to Programming
Scroll to begin   
Text
Section 2 – Introduction to Python
New Component Title
Text
Welcome to Python Essentials 1
Syllabus
New Component Title
Return
Previous
Home
Menu
Next
{{inc index}}
Close
Python rivals?
Begin your Python journey
There are several ways to get your own copy of Python 3, depending on the operating system you use.Linux users most probably have Python already installed - this is the most likely scenario, as Python's infrastructure is intensively used by many Linux OS components.For example, some distributors may couple their specific tools together with the system and many of these tools, like package managers, are often written in Python. Some parts of graphical environments available in the Linux world may use Python, too.If you're a Linux user, open the terminal/console, and type:
New Component Title
Where can we see Python in action?
New Component Title
Return
Previous
Home
Back to menu
Next
{{inc index}}
Close
Module 1 Completion – Module Test
Scroll to begin   
Return
Previous
Home
Back to menu
Next
{{inc index}}
Close
What makes Python so special?
How does it happen that programmers, young and old, experienced and novice, want to use it? How did it happen that large companies adopted Python and implemented their flagship products using it?
There are many reasons &ndash; we've listed some of them already, but let's enumerate them again in a more practical manner:
Blank
New Component Title
New Component Title
New Component Title
Click the images to learn more about the members of the Python family, and some of the most popular Python alternative implementations.
New Component Title
at the shell prompt, press Enter and wait. If you see something like this:
New Component Title
New Component Title
How to spoil and fix your code
Hello there, and welcome to section one! We will start off by learning about some of the universal concepts of programming, such as instruction list, source file, language elements, compilation and interpretation. Ready? Let's start!
Text
Section 3 – Downloading and Installing Python
Prepare for the PCEP-30-0x exam
Compilation vs. Interpretation
Click the images to learn more about the differences between compilation and interpretation.
New Component Title
Why not Python?
New Component Title
New Component Title
New Component Title
Learn Python – the language of today and tomorrow
This course is the first in a two-course Python Essentials series. It covers everything you need to know to start designing, writing, running, debugging, and improving Python programs at the foundational level. It also fully prepares you for the PCEP – Certified Entry-Level Python Programmer certification exam from the Python Institute.
New Component Title
New Component Title
A hobby programming project
New Component Title
Welcome to section three, where we will talk about the ways of obtaining, installing, and configuring Python on your local computer. This section is optional, as throughout the course you will be able to launch, test, and experiment with all your Python programs in Edube Interactive TM, the programming environment that we have integrated with the learning platform and these study resources. Still, if you can download and install Python on your local machine, we strongly recommend it.
New Component Title
What does the interpreter do?
How to download, install, and configure Python
Text
Module 1 Completion – Module Test
New Component Title
Starting your work with Python
Compilation vs. interpretation – advantages and disadvantages
New Component Title
New Component Title
Natural languages vs. programming languages
Question
What is the expected behavior of the following program?prin("Goodbye!") 
The program will generate an error message on the screen
The program will output Goodbye! to the screen
The program will output "Goodbye!" to the screen
The program will output ("Goodbye!") to the screen
Blank
How does a computer program work?
Quiz Feedback
Section 2 – Introduction to Python
Scroll to begin   
Who created Python?
Machine language vs. high-level language
Text
Section 1 – Introduction to Programming
New Component Title
Question
What do you call a command-line interpreter which lets you interact with your OS and execute Python commands and scripts?
A console
An editor
Jython
A compiler
Blank
Python – a tool, not a reptile
Question
What is CPython?
It's the default, reference implementation of Python, written in the C language
It's a programming language that is a superset of Python, designed to produce C-like performance with code written in Python
It's a programming language that is a superset of the C language, designed to produce Python-like performance with code written in C
It's the default, reference implementation of the C language, written in Python
New Component Title
What does the interpreter do?
Python implementations
New Component Title
What makes a language?
We can say that each language (machine or natural, it doesn't matter) consists of the following elements:
an alphabet
a set of symbols used to build words of a certain language (e.g., the Latin alphabet for English, the Cyrillic alphabet for Russian, Kanji for Japanese, and so on)
a lexis
(aka a dictionary) a set of words the language offers its users (e.g., the word "computer" comes from the English language dictionary, while "cmoptrue" doesn't; the word "chat" is present both in English and French dictionaries, but their meanings are different)
a syntax
a set of rules (formal or informal, written or felt intuitively) used to determine if a certain string of words forms a valid sentence (e.g., "I am a python" is a syntactically correct phrase, while "I a python am" isn't)
semantics
a set of rules determining if a certain phrase makes sense (e.g., "I ate a doughnut" makes sense, but "A doughnut ate me" doesn't)
Welcome to Python Essentials 1
Scroll to begin   
Your very first program before your first program...
New Component Title
Question
What are the four fundamental elements that make a language?
An alphabet, a lexis, a syntax, and semantics
An alphabet, a lexis, phonetics, and semantics
An alphabet, phonetics, phonology, and semantics
An alphabet, morphology, phonetics, and semantics
New Component Title
Run it to see if it "hisses" again.Let's spoil the code one more time. Remove one letter from the word print. Run the code by pressing F5. What happens now? As you can see, Python is not able to recognize the instruction.
Well done! You've reached the end of Module 1 and completed a major milestone in your Python programming education. Here's a short summary of the topic areas you've covered in Module 1:the fundamentals of computer programming, i.e., how the computer works, how the program is executed, how the programming language is defined and constructed;the difference between compilation and interpretation;the basic information about Python and how it is positioned among other programming languages, and what distinguishes its different versions;how to obtain, install, and configure Python on your local machine.You are now ready to take the module test, which will both help you gauge what you've learned so far. The following test is based on what you have just learned. There are ten questions in total and you need to score at least 70% to pass.Good luck!
Question
What is the expected behavior of the following program?print("Hello!") 
The program will output Hello! to the screen
The program will output "Hello!" to the screen
The program will output ("Hello!") to the screen
The program will generate an error message on the screen
New Component Title
New Component Title
Return
Previous
Home
Back to menu
Next
{{inc index}}
Close
New Component Title
Welcome to section two. Here, we will learn a little bit about the history of Python, different Python versions and implementations, and the impact that Python has had on modern-day programming. Let's begin.
